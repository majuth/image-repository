{"version":3,"sources":["firebase/index.js","App.js","reportWebVitals.js","index.js"],"names":["storage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","fileSelectHandler","event","setState","image","target","files","fileUploadHandler","ref","state","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","displayImages","listAll","result","items","forEach","imageRef","document","getElementById","innerHTML","images","this","className","id","type","onChange","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6QAcQA,G,MAFIC,IAASC,cATE,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAKOP,IAASD,WCsEZS,E,kDA9Eb,aAAc,IAAD,8BACX,gBAWFC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACZC,MAAOF,EAAMG,OAAOC,MAAM,MAdjB,EAkBbC,kBAAoB,WACChB,EAAQiB,IAAR,iBAAsB,EAAKC,MAAML,MAAMM,OAAQC,IAAI,EAAKF,MAAML,OACtEQ,GACT,iBACA,SAAAC,OACA,SAAAC,GACEC,QAAQC,IAAIF,MAEd,WACEvB,EACGiB,IAAI,UACJS,MAAM,EAAKR,MAAML,MAAMM,MACvBQ,iBACAC,MAAK,SAAAC,GACJL,QAAQC,IAAII,GACZ,EAAKC,uBAjCF,EAwCbA,cAAiB,WAYf,OAVA9B,EAAQiB,IAAI,UAAUc,UAAUH,MAAK,SAASI,GAC5CA,EAAOC,MAAMC,SAAQ,SAASC,GAC5BA,EAASR,iBAAiBC,MAAK,SAASC,GACtCO,SAASC,eAAe,gBAAgBC,UAAaF,SAASC,eAAe,gBAAgBC,UAAY,qCAAuCT,EAAM,wBACtJL,QAAQC,IAAII,YAIfD,KAAKQ,SAASC,eAAe,gBAAgBC,UAT/B,IAUjBd,QAAQC,IAVS,QAvCjB,EAAKP,MAAQ,CACXL,MAAO,KACP0B,OAAQ,MAJC,E,gEASXC,KAAKV,kB,+BAiDL,OACE,gCACE,qBAAKW,UAAU,aAAf,SACE,oDAGF,sBAAKA,UAAU,MAAf,UACE,uBACA,sBAAKC,GAAG,YAAR,UACE,uBAAOC,KAAK,OAAOC,SAAUJ,KAAK9B,oBAClC,wBAAQmC,QAASL,KAAKxB,kBAAtB,uBAEF,qBAAK0B,GAAG,2B,GAxEAI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.21f61e47.chunk.js","sourcesContent":["import firebase from  \"firebase/app\";\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDlLFCA96Uq78vFx4XcSYLpaG14vL82KL0\",\r\n    authDomain: \"image-repository-a7a71.firebaseapp.com\",\r\n    projectId: \"image-repository-a7a71\",\r\n    storageBucket: \"image-repository-a7a71.appspot.com\",\r\n    messagingSenderId: \"129500402969\",\r\n    appId: \"1:129500402969:web:1b8d8ee90db8c9a6eca188\"\r\n  };\r\n\r\n  var app = firebase.initializeApp(firebaseConfig);\r\n\r\n  const storage = firebase.storage();\r\n\r\n  export {storage, firebase as default};","import './App.css';\nimport React, { Component } from 'react';\nimport { storage } from \"./firebase\";\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      image: null,\n      images: null\n    }\n  }\n\n  componentDidMount(){\n    this.displayImages();\n  }\n\n  fileSelectHandler = event =>{\n    this.setState({\n      image: event.target.files[0]\n    })\n  }\n\n  fileUploadHandler = () =>{\n    const uploadTask = storage.ref(`images/${this.state.image.name}`).put(this.state.image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {},\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(this.state.image.name)\n          .getDownloadURL()\n          .then(url => {\n            console.log(url);\n            this.displayImages();\n          });\n      }\n    )\n    \n  }\n\n  displayImages =  () =>{\n    var tempImages = \"\";\n    storage.ref(\"images\").listAll().then(function(result) {\n      result.items.forEach(function(imageRef) {\n        imageRef.getDownloadURL().then(function(url){\n          document.getElementById(\"imageContent\").innerHTML = (document.getElementById(\"imageContent\").innerHTML + \"<div class='imageHolder'><img src=\" + url + \" class='pics'/></div>\");\n          console.log(url);\n          //tempImages.concat(\"<img src=\" + {url} + \"/>\")\n        })\n      });\n    }).then(document.getElementById(\"imageContent\").innerHTML = tempImages); //can make .then render here\n    console.log(tempImages);    \n    return tempImages;\n  }\n\n \n\n  render(){\n    return (\n      <div>\n        <div className=\"App-header\">\n          <h2>Image Repository</h2>\n        </div>\n\n        <div className=\"App\">\n          <br></br>\n          <div id=\"fileInput\">\n            <input type=\"file\" onChange={this.fileSelectHandler}/>\n            <button onClick={this.fileUploadHandler}>Upload</button>\n          </div>\n          <div id=\"imageContent\">\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}